id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: ESGI.BehaviourTrees
  commentId: N:ESGI.BehaviourTrees
  language: CSharp
  name:
    CSharp: ESGI.BehaviourTrees
    VB: ESGI.BehaviourTrees
  nameWithType:
    CSharp: ESGI.BehaviourTrees
    VB: ESGI.BehaviourTrees
  qualifiedName:
    CSharp: ESGI.BehaviourTrees
    VB: ESGI.BehaviourTrees
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ESGI.BehaviourTrees.BehaviourTree`1
    commentId: T:ESGI.BehaviourTrees.BehaviourTree`1
    language: CSharp
    name:
      CSharp: BehaviourTree<TAgent>
      VB: BehaviourTree(Of TAgent)
    nameWithType:
      CSharp: BehaviourTree<TAgent>
      VB: BehaviourTree(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>
      VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: BehaviourTree
      path: ''
      startLine: 12
    summary: "\nThe class to derive from to create a Behaviour Tree. It is a MonoBehaviour.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class BehaviourTree<TAgent> : BehaviourTreeBase where TAgent : MonoBehaviour'
        VB: >-
          Public MustInherit Class BehaviourTree(Of TAgent As MonoBehaviour)

              Inherits BehaviourTreeBase
      typeParameters:
      - id: TAgent
        description: The type of the agent being controlled by the tree (Boss, Enemy etc.)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.BehaviourTreeBase
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent
      commentId: P:ESGI.BehaviourTrees.BehaviourTree`1.Agent
      language: CSharp
      name:
        CSharp: Agent
        VB: Agent
      nameWithType:
        CSharp: BehaviourTree<TAgent>.Agent
        VB: BehaviourTree(Of TAgent).Agent
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Agent
        VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Agent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Agent
        path: ''
        startLine: 23
      summary: "\nA reference to the MonoBehaviour being controlled by this BT.\n"
      example: []
      syntax:
        content:
          CSharp: public TAgent Agent { get; }
          VB: Public ReadOnly Property Agent As TAgent
        parameters: []
        return:
          type: '{TAgent}'
      overload: ESGI.BehaviourTrees.BehaviourTree`1.Agent*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake
      commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BehaviourTree<TAgent>.Awake()
        VB: BehaviourTree(Of TAgent).Awake()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Awake()
        VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Awake
        path: ''
        startLine: 32
      summary: "\nChecks if the Agent is null, if not tries to get it. If still null, logs an\nerror. \n"
      example: []
      syntax:
        content:
          CSharp: protected sealed override void Awake()
          VB: Protected NotOverridable Overrides Sub Awake
      overload: ESGI.BehaviourTrees.BehaviourTree`1.Awake*
      overridden: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
    - id: ESGI.BehaviourTrees.BehaviourTree`1.Start
      commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BehaviourTree<TAgent>.Start()
        VB: BehaviourTree(Of TAgent).Start()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Start()
        VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Start
        path: ''
        startLine: 48
      summary: "\nStarts the tree\n"
      example: []
      syntax:
        content:
          CSharp: protected sealed override void Start()
          VB: Protected NotOverridable Overrides Sub Start
      overload: ESGI.BehaviourTrees.BehaviourTree`1.Start*
      overridden: ESGI.BehaviourTrees.BehaviourTreeBase.Start
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
    - id: ESGI.BehaviourTrees.BehaviourTree`1.Update
      commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: BehaviourTree<TAgent>.Update()
        VB: BehaviourTree(Of TAgent).Update()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Update()
        VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Update
        path: ''
        startLine: 56
      summary: "\nTicks the nodes. The tree resets if the node is the last one to be ticked.\n"
      example: []
      syntax:
        content:
          CSharp: protected sealed override void Update()
          VB: Protected NotOverridable Overrides Sub Update
      overload: ESGI.BehaviourTrees.BehaviourTree`1.Update*
      overridden: ESGI.BehaviourTrees.BehaviourTreeBase.Update
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
    - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
      commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
      language: CSharp
      name:
        CSharp: OnDrawGizmos()
        VB: OnDrawGizmos()
      nameWithType:
        CSharp: BehaviourTree<TAgent>.OnDrawGizmos()
        VB: BehaviourTree(Of TAgent).OnDrawGizmos()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTree<TAgent>.OnDrawGizmos()
        VB: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).OnDrawGizmos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnDrawGizmos
        path: ''
        startLine: 72
      summary: "\nDraws each node&apos;s Gizmos (only in Editor).\n"
      example: []
      syntax:
        content:
          CSharp: protected sealed override void OnDrawGizmos()
          VB: Protected NotOverridable Overrides Sub OnDrawGizmos
      overload: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos*
      overridden: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
  - id: ESGI.BehaviourTrees.BehaviourTreeBase
    commentId: T:ESGI.BehaviourTrees.BehaviourTreeBase
    language: CSharp
    name:
      CSharp: BehaviourTreeBase
      VB: BehaviourTreeBase
    nameWithType:
      CSharp: BehaviourTreeBase
      VB: BehaviourTreeBase
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.BehaviourTreeBase
      VB: ESGI.BehaviourTrees.BehaviourTreeBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: BehaviourTreeBase
      path: ''
      startLine: 134
    summary: "\nNon generic version of the BT.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class BehaviourTreeBase : MonoBehaviour'
        VB: >-
          Public MustInherit Class BehaviourTreeBase

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BehaviourTreeBase.Awake()
        VB: BehaviourTreeBase.Awake()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTreeBase.Awake()
        VB: ESGI.BehaviourTrees.BehaviourTreeBase.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Awake
        path: ''
        startLine: 139
      summary: "\nInit the BT.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: ESGI.BehaviourTrees.BehaviourTreeBase.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.BehaviourTreeBase.Start
      commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BehaviourTreeBase.Start()
        VB: BehaviourTreeBase.Start()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTreeBase.Start()
        VB: ESGI.BehaviourTrees.BehaviourTreeBase.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Start
        path: ''
        startLine: 146
      summary: "\nStarts the BT\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: ESGI.BehaviourTrees.BehaviourTreeBase.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.BehaviourTreeBase.Update
      commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: BehaviourTreeBase.Update()
        VB: BehaviourTreeBase.Update()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTreeBase.Update()
        VB: ESGI.BehaviourTrees.BehaviourTreeBase.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Update
        path: ''
        startLine: 153
      summary: "\nUpdates the tree\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: ESGI.BehaviourTrees.BehaviourTreeBase.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      language: CSharp
      name:
        CSharp: OnDrawGizmos()
        VB: OnDrawGizmos()
      nameWithType:
        CSharp: BehaviourTreeBase.OnDrawGizmos()
        VB: BehaviourTreeBase.OnDrawGizmos()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos()
        VB: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnDrawGizmos
        path: ''
        startLine: 161
      summary: "\nDraw each node gizmos\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDrawGizmos()
          VB: Protected Overridable Sub OnDrawGizmos
      overload: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: ESGI.BehaviourTrees.NodeState
    commentId: T:ESGI.BehaviourTrees.NodeState
    language: CSharp
    name:
      CSharp: NodeState
      VB: NodeState
    nameWithType:
      CSharp: NodeState
      VB: NodeState
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.NodeState
      VB: ESGI.BehaviourTrees.NodeState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: NodeState
      path: ''
      startLine: 172
    summary: "\nThe tree and the nodes can be in one of these states\n"
    example: []
    syntax:
      content:
        CSharp: public enum NodeState
        VB: Public Enum NodeState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: ESGI.BehaviourTrees.NodeState.NotExecuted
      commentId: F:ESGI.BehaviourTrees.NodeState.NotExecuted
      language: CSharp
      name:
        CSharp: NotExecuted
        VB: NotExecuted
      nameWithType:
        CSharp: NodeState.NotExecuted
        VB: NodeState.NotExecuted
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeState.NotExecuted
        VB: ESGI.BehaviourTrees.NodeState.NotExecuted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: NotExecuted
        path: ''
        startLine: 177
      summary: "\nNode is in idle\n"
      example: []
      syntax:
        content:
          CSharp: NotExecuted = 0
          VB: NotExecuted = 0
        return:
          type: ESGI.BehaviourTrees.NodeState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ESGI.BehaviourTrees.NodeState.Failure
      commentId: F:ESGI.BehaviourTrees.NodeState.Failure
      language: CSharp
      name:
        CSharp: Failure
        VB: Failure
      nameWithType:
        CSharp: NodeState.Failure
        VB: NodeState.Failure
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeState.Failure
        VB: ESGI.BehaviourTrees.NodeState.Failure
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Failure
        path: ''
        startLine: 181
      summary: "\nExecution has failed\n"
      example: []
      syntax:
        content:
          CSharp: Failure = 1
          VB: Failure = 1
        return:
          type: ESGI.BehaviourTrees.NodeState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ESGI.BehaviourTrees.NodeState.Success
      commentId: F:ESGI.BehaviourTrees.NodeState.Success
      language: CSharp
      name:
        CSharp: Success
        VB: Success
      nameWithType:
        CSharp: NodeState.Success
        VB: NodeState.Success
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeState.Success
        VB: ESGI.BehaviourTrees.NodeState.Success
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Success
        path: ''
        startLine: 185
      summary: "\nExecution has succeeded\n"
      example: []
      syntax:
        content:
          CSharp: Success = 2
          VB: Success = 2
        return:
          type: ESGI.BehaviourTrees.NodeState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: ESGI.BehaviourTrees.NodeState.Running
      commentId: F:ESGI.BehaviourTrees.NodeState.Running
      language: CSharp
      name:
        CSharp: Running
        VB: Running
      nameWithType:
        CSharp: NodeState.Running
        VB: NodeState.Running
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeState.Running
        VB: ESGI.BehaviourTrees.NodeState.Running
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Running
        path: ''
        startLine: 189
      summary: "\nExecution is going on\n"
      example: []
      syntax:
        content:
          CSharp: Running = 3
          VB: Running = 3
        return:
          type: ESGI.BehaviourTrees.NodeState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: ESGI.BehaviourTrees.ActionNode`1
    commentId: T:ESGI.BehaviourTrees.ActionNode`1
    language: CSharp
    name:
      CSharp: ActionNode<TAgent>
      VB: ActionNode(Of TAgent)
    nameWithType:
      CSharp: ActionNode<TAgent>
      VB: ActionNode(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.ActionNode<TAgent>
      VB: ESGI.BehaviourTrees.ActionNode(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: ActionNode
      path: ''
      startLine: 589
    summary: "\nA node that modifies the state of the world\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ActionNode<TAgent> : Node<TAgent> where TAgent : MonoBehaviour'
        VB: >-
          Public MustInherit Class ActionNode(Of TAgent As MonoBehaviour)

              Inherits Node(Of TAgent)
      typeParameters:
      - id: TAgent
        description: The type of agent owning this node
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{{TAgent}}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{{TAgent}}.Agent
    - ESGI.BehaviourTrees.Node{{TAgent}}.State
    - ESGI.BehaviourTrees.Node{{TAgent}}.Children
    - ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.LastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}})
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnInit
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{{TAgent}}.Update
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: ESGI.BehaviourTrees.CompositeNode`1
    commentId: T:ESGI.BehaviourTrees.CompositeNode`1
    language: CSharp
    name:
      CSharp: CompositeNode<TAgent>
      VB: CompositeNode(Of TAgent)
    nameWithType:
      CSharp: CompositeNode<TAgent>
      VB: CompositeNode(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.CompositeNode<TAgent>
      VB: ESGI.BehaviourTrees.CompositeNode(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: CompositeNode
      path: ''
      startLine: 604
    summary: "\nSequences and Selectors inherits this class.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class CompositeNode<TAgent> : Node<TAgent> where TAgent : MonoBehaviour'
        VB: >-
          Public MustInherit Class CompositeNode(Of TAgent As MonoBehaviour)

              Inherits Node(Of TAgent)
      typeParameters:
      - id: TAgent
        description: The type of Agent being controlled by the BT.
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{{TAgent}}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{{TAgent}}.Agent
    - ESGI.BehaviourTrees.Node{{TAgent}}.State
    - ESGI.BehaviourTrees.Node{{TAgent}}.Children
    - ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.LastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}})
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnInit
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{{TAgent}}.Update
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: ESGI.BehaviourTrees.ConditionNode`1
    commentId: T:ESGI.BehaviourTrees.ConditionNode`1
    language: CSharp
    name:
      CSharp: ConditionNode<TAgent>
      VB: ConditionNode(Of TAgent)
    nameWithType:
      CSharp: ConditionNode<TAgent>
      VB: ConditionNode(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.ConditionNode<TAgent>
      VB: ESGI.BehaviourTrees.ConditionNode(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: ConditionNode
      path: ''
      startLine: 617
    summary: "\nNodes do not modify the state of the world. They are used to check if something is true or not.\nThey can take multiple frames to return the value if they return NodeState.Running.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ConditionNode<TAgent> : Node<TAgent> where TAgent : MonoBehaviour'
        VB: >-
          Public MustInherit Class ConditionNode(Of TAgent As MonoBehaviour)

              Inherits Node(Of TAgent)
      typeParameters:
      - id: TAgent
        description: The type of Agent being controlled by the BT.
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{{TAgent}}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{{TAgent}}.Agent
    - ESGI.BehaviourTrees.Node{{TAgent}}.State
    - ESGI.BehaviourTrees.Node{{TAgent}}.Children
    - ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.LastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}})
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnInit
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{{TAgent}}.Update
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: ESGI.BehaviourTrees.Node`1
    commentId: T:ESGI.BehaviourTrees.Node`1
    language: CSharp
    name:
      CSharp: Node<TAgent>
      VB: Node(Of TAgent)
    nameWithType:
      CSharp: Node<TAgent>
      VB: Node(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Node<TAgent>
      VB: ESGI.BehaviourTrees.Node(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: Node
      path: ''
      startLine: 632
    syntax:
      content:
        CSharp: 'public abstract class Node<TAgent> : NodeBase where TAgent : MonoBehaviour'
        VB: >-
          Public MustInherit Class Node(Of TAgent As MonoBehaviour)

              Inherits NodeBase
      typeParameters:
      - id: TAgent
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: ESGI.BehaviourTrees.Node`1.Agent
      commentId: P:ESGI.BehaviourTrees.Node`1.Agent
      language: CSharp
      name:
        CSharp: Agent
        VB: Agent
      nameWithType:
        CSharp: Node<TAgent>.Agent
        VB: Node(Of TAgent).Agent
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.Agent
        VB: ESGI.BehaviourTrees.Node(Of TAgent).Agent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Agent
        path: ''
        startLine: 643
      summary: "\nThe agent being controlled by this BT.\n"
      example: []
      syntax:
        content:
          CSharp: protected TAgent Agent { get; }
          VB: Protected ReadOnly Property Agent As TAgent
        parameters: []
        return:
          type: '{TAgent}'
      overload: ESGI.BehaviourTrees.Node`1.Agent*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: ESGI.BehaviourTrees.Node`1.State
      commentId: P:ESGI.BehaviourTrees.Node`1.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: Node<TAgent>.State
        VB: Node(Of TAgent).State
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.State
        VB: ESGI.BehaviourTrees.Node(Of TAgent).State
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: State
        path: ''
        startLine: 647
      summary: "\nThe current state of the Node.\n"
      example: []
      syntax:
        content:
          CSharp: public NodeState State { get; set; }
          VB: Public Property State As NodeState
        parameters: []
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Node`1.State*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Node`1.Children
      commentId: P:ESGI.BehaviourTrees.Node`1.Children
      language: CSharp
      name:
        CSharp: Children
        VB: Children
      nameWithType:
        CSharp: Node<TAgent>.Children
        VB: Node(Of TAgent).Children
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.Children
        VB: ESGI.BehaviourTrees.Node(Of TAgent).Children
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Children
        path: ''
        startLine: 652
      summary: "\nThe children of the Node. The order is important : Left is executed first in the BT. \n"
      example: []
      syntax:
        content:
          CSharp: public List<Node<TAgent>> Children { get; }
          VB: Public ReadOnly Property Children As List(Of Node(Of TAgent))
        parameters: []
        return:
          type: System.Collections.Generic.List{ESGI.BehaviourTrees.Node`1}
      overload: ESGI.BehaviourTrees.Node`1.Children*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
      commentId: P:ESGI.BehaviourTrees.Node`1.IsRunningLastChild
      language: CSharp
      name:
        CSharp: IsRunningLastChild
        VB: IsRunningLastChild
      nameWithType:
        CSharp: Node<TAgent>.IsRunningLastChild
        VB: Node(Of TAgent).IsRunningLastChild
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.IsRunningLastChild
        VB: ESGI.BehaviourTrees.Node(Of TAgent).IsRunningLastChild
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: IsRunningLastChild
        path: ''
        startLine: 657
      summary: "\nIf the Node has children, returns true if the most right node in the\nchildren list is running.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsRunningLastChild { get; }
          VB: Public ReadOnly Property IsRunningLastChild As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: ESGI.BehaviourTrees.Node`1.IsRunningLastChild*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.Node`1.LastChild
      commentId: P:ESGI.BehaviourTrees.Node`1.LastChild
      language: CSharp
      name:
        CSharp: LastChild
        VB: LastChild
      nameWithType:
        CSharp: Node<TAgent>.LastChild
        VB: Node(Of TAgent).LastChild
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.LastChild
        VB: ESGI.BehaviourTrees.Node(Of TAgent).LastChild
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: LastChild
        path: ''
        startLine: 661
      summary: "\nIf has children, returns it. Else returns the Node itself.\n"
      example: []
      syntax:
        content:
          CSharp: public Node<TAgent> LastChild { get; }
          VB: Public ReadOnly Property LastChild As Node(Of TAgent)
        parameters: []
        return:
          type: ESGI.BehaviourTrees.Node`1
      overload: ESGI.BehaviourTrees.Node`1.LastChild*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
      commentId: M:ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
      language: CSharp
      name:
        CSharp: Init(BehaviourTree<TAgent>)
        VB: Init(BehaviourTree(Of TAgent))
      nameWithType:
        CSharp: Node<TAgent>.Init(BehaviourTree<TAgent>)
        VB: Node(Of TAgent).Init(BehaviourTree(Of TAgent))
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.Init(ESGI.BehaviourTrees.BehaviourTree<TAgent>)
        VB: ESGI.BehaviourTrees.Node(Of TAgent).Init(ESGI.BehaviourTrees.BehaviourTree(Of TAgent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Init
        path: ''
        startLine: 667
      summary: "\nCalled by the BT, once at the initialization. Sets the State to NotExecuted.\n"
      example: []
      syntax:
        content:
          CSharp: public void Init(BehaviourTree<TAgent> behaviourTree)
          VB: Public Sub Init(behaviourTree As BehaviourTree(Of TAgent))
        parameters:
        - id: behaviourTree
          type: ESGI.BehaviourTrees.BehaviourTree{{TAgent}}
          description: The tree owning this Node
      overload: ESGI.BehaviourTrees.Node`1.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Node`1.OnInit
      commentId: M:ESGI.BehaviourTrees.Node`1.OnInit
      language: CSharp
      name:
        CSharp: OnInit()
        VB: OnInit()
      nameWithType:
        CSharp: Node<TAgent>.OnInit()
        VB: Node(Of TAgent).OnInit()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.OnInit()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).OnInit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnInit
        path: ''
        startLine: 680
      summary: "\nCalled only once, once the behaviour tree is initialized.\nOverride this. Can be considered as the Node constructor.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnInit()
          VB: Protected Overridable Sub OnInit
      overload: ESGI.BehaviourTrees.Node`1.OnInit*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
      commentId: M:ESGI.BehaviourTrees.Node`1.OnBeforeExecute
      language: CSharp
      name:
        CSharp: OnBeforeExecute()
        VB: OnBeforeExecute()
      nameWithType:
        CSharp: Node<TAgent>.OnBeforeExecute()
        VB: Node(Of TAgent).OnBeforeExecute()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.OnBeforeExecute()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).OnBeforeExecute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnBeforeExecute
        path: ''
        startLine: 689
      summary: "\nCalled before the execution of the node, used to setup data that needs to be reset from\nthe previous execution of the Node. Can be overriden.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnBeforeExecute()
          VB: Public Overridable Sub OnBeforeExecute
      overload: ESGI.BehaviourTrees.Node`1.OnBeforeExecute*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: ESGI.BehaviourTrees.Node`1.Update
      commentId: M:ESGI.BehaviourTrees.Node`1.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Node<TAgent>.Update()
        VB: Node(Of TAgent).Update()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.Update()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Update
        path: ''
        startLine: 698
      summary: "\nCalled to tick the Node. If the State is already Success or Failure does not do anything.\n"
      example: []
      syntax:
        content:
          CSharp: public NodeState Update()
          VB: Public Function Update As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
          description: The state of the node at the end of the tick.
      overload: ESGI.BehaviourTrees.Node`1.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Node`1.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Node`1.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: Node<TAgent>.OnUpdate()
        VB: Node(Of TAgent).OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.OnUpdate()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnUpdate
        path: ''
        startLine: 719
      summary: "\nCalled each frame during the task execution. Override this to define the behaviour\nof the node.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual NodeState OnUpdate()
          VB: Protected Overridable Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
          description: The status of the task at the end of the frame
      overload: ESGI.BehaviourTrees.Node`1.OnUpdate*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
      commentId: M:ESGI.BehaviourTrees.Node`1.OnExecutionEnd
      language: CSharp
      name:
        CSharp: OnExecutionEnd()
        VB: OnExecutionEnd()
      nameWithType:
        CSharp: Node<TAgent>.OnExecutionEnd()
        VB: Node(Of TAgent).OnExecutionEnd()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.OnExecutionEnd()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).OnExecutionEnd()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnExecutionEnd
        path: ''
        startLine: 728
      summary: >
        u

        Called at the end of the execution : on Success or Fail.

        Override this to do stuff on the Node once we update the next node.
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnExecutionEnd()
          VB: Protected Overridable Sub OnExecutionEnd
      overload: ESGI.BehaviourTrees.Node`1.OnExecutionEnd*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
      commentId: M:ESGI.BehaviourTrees.Node`1.DrawGizmos
      language: CSharp
      name:
        CSharp: DrawGizmos()
        VB: DrawGizmos()
      nameWithType:
        CSharp: Node<TAgent>.DrawGizmos()
        VB: Node(Of TAgent).DrawGizmos()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Node<TAgent>.DrawGizmos()
        VB: ESGI.BehaviourTrees.Node(Of TAgent).DrawGizmos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: DrawGizmos
        path: ''
        startLine: 736
      summary: "\nCalled in Editor to Draw Gizmos.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void DrawGizmos()
          VB: Public Overridable Sub DrawGizmos
      overload: ESGI.BehaviourTrees.Node`1.DrawGizmos*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: ESGI.BehaviourTrees.NodeBase
    commentId: T:ESGI.BehaviourTrees.NodeBase
    language: CSharp
    name:
      CSharp: NodeBase
      VB: NodeBase
    nameWithType:
      CSharp: NodeBase
      VB: NodeBase
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.NodeBase
      VB: ESGI.BehaviourTrees.NodeBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: NodeBase
      path: ''
      startLine: 763
    summary: "\nNon Generic version of the nodes. They are Scriptable Objects.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class NodeBase : ScriptableObject'
        VB: >-
          Public MustInherit Class NodeBase

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: ESGI.BehaviourTrees.SelectorNode`1
    commentId: T:ESGI.BehaviourTrees.SelectorNode`1
    language: CSharp
    name:
      CSharp: SelectorNode<TAgent>
      VB: SelectorNode(Of TAgent)
    nameWithType:
      CSharp: SelectorNode<TAgent>
      VB: SelectorNode(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.SelectorNode<TAgent>
      VB: ESGI.BehaviourTrees.SelectorNode(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: SelectorNode
      path: ''
      startLine: 777
    summary: "\nOR logic gate : the node succeeds if one of the children succeeds\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SelectorNode<TAgent> : CompositeNode<TAgent> where TAgent : MonoBehaviour'
        VB: >-
          Public Class SelectorNode(Of TAgent As MonoBehaviour)

              Inherits CompositeNode(Of TAgent)
      typeParameters:
      - id: TAgent
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{{TAgent}}
    - ESGI.BehaviourTrees.CompositeNode{{TAgent}}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{{TAgent}}.Agent
    - ESGI.BehaviourTrees.Node{{TAgent}}.State
    - ESGI.BehaviourTrees.Node{{TAgent}}.Children
    - ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.LastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}})
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnInit
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{{TAgent}}.Update
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
      commentId: M:ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: SelectorNode<TAgent>.OnUpdate()
        VB: SelectorNode(Of TAgent).OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.SelectorNode<TAgent>.OnUpdate()
        VB: ESGI.BehaviourTrees.SelectorNode(Of TAgent).OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnUpdate
        path: ''
        startLine: 779
      syntax:
        content:
          CSharp: protected sealed override NodeState OnUpdate()
          VB: Protected NotOverridable Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - sealed
        - override
        VB:
        - Protected
        - Overrides
        - NotOverridable
  - id: ESGI.BehaviourTrees.SequenceNode`1
    commentId: T:ESGI.BehaviourTrees.SequenceNode`1
    language: CSharp
    name:
      CSharp: SequenceNode<TAgent>
      VB: SequenceNode(Of TAgent)
    nameWithType:
      CSharp: SequenceNode<TAgent>
      VB: SequenceNode(Of TAgent)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.SequenceNode<TAgent>
      VB: ESGI.BehaviourTrees.SequenceNode(Of TAgent)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: SequenceNode
      path: ''
      startLine: 817
    summary: "\nAnd logic gate node. The node succeeds only if all the children succeed;\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SequenceNode<TAgent> : CompositeNode<TAgent> where TAgent : MonoBehaviour'
        VB: >-
          Public Class SequenceNode(Of TAgent As MonoBehaviour)

              Inherits CompositeNode(Of TAgent)
      typeParameters:
      - id: TAgent
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{{TAgent}}
    - ESGI.BehaviourTrees.CompositeNode{{TAgent}}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{{TAgent}}.Agent
    - ESGI.BehaviourTrees.Node{{TAgent}}.State
    - ESGI.BehaviourTrees.Node{{TAgent}}.Children
    - ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.LastChild
    - ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}})
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnInit
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{{TAgent}}.Update
    - ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
      commentId: M:ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: SequenceNode<TAgent>.OnUpdate()
        VB: SequenceNode(Of TAgent).OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.SequenceNode<TAgent>.OnUpdate()
        VB: ESGI.BehaviourTrees.SequenceNode(Of TAgent).OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: OnUpdate
        path: ''
        startLine: 819
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: ESGI.BehaviourTrees.NodeVariable`1
    commentId: T:ESGI.BehaviourTrees.NodeVariable`1
    language: CSharp
    name:
      CSharp: NodeVariable<T>
      VB: NodeVariable(Of T)
    nameWithType:
      CSharp: NodeVariable<T>
      VB: NodeVariable(Of T)
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.NodeVariable<T>
      VB: ESGI.BehaviourTrees.NodeVariable(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: NodeVariable
      path: ''
      startLine: 859
    summary: "\nThe generic version of <see cref=\"T:ESGI.BehaviourTrees.NodeVariableBase\"></see> (NodeVariableBase)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NodeVariable<T> : NodeVariableBase'
        VB: >-
          Public Class NodeVariable(Of T)

              Inherits NodeVariableBase
      typeParameters:
      - id: T
        description: The type of variable (bool, int, string etc.)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeVariableBase
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.NodeVariable`1.Value
      commentId: P:ESGI.BehaviourTrees.NodeVariable`1.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: NodeVariable<T>.Value
        VB: NodeVariable(Of T).Value
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeVariable<T>.Value
        VB: ESGI.BehaviourTrees.NodeVariable(Of T).Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: Value
        path: ''
        startLine: 864
      summary: "\nThe value of the data. It is advised to reset this value before the node execution.\n"
      example: []
      syntax:
        content:
          CSharp: public T Value { get; set; }
          VB: Public Property Value As T
        parameters: []
        return:
          type: '{T}'
      overload: ESGI.BehaviourTrees.NodeVariable`1.Value*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
      commentId: M:ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
      language: CSharp
      name:
        CSharp: ResetVariable()
        VB: ResetVariable()
      nameWithType:
        CSharp: NodeVariable<T>.ResetVariable()
        VB: NodeVariable(Of T).ResetVariable()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.NodeVariable<T>.ResetVariable()
        VB: ESGI.BehaviourTrees.NodeVariable(Of T).ResetVariable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees
      source:
        id: ResetVariable
        path: ''
        startLine: 870
      summary: "\nUsed to reset the Data.\n"
      example: []
      syntax:
        content:
          CSharp: public void ResetVariable()
          VB: Public Sub ResetVariable
      overload: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ESGI.BehaviourTrees.NodeVariableBase
    commentId: T:ESGI.BehaviourTrees.NodeVariableBase
    language: CSharp
    name:
      CSharp: NodeVariableBase
      VB: NodeVariableBase
    nameWithType:
      CSharp: NodeVariableBase
      VB: NodeVariableBase
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.NodeVariableBase
      VB: ESGI.BehaviourTrees.NodeVariableBase
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees
    source:
      id: NodeVariableBase
      path: ''
      startLine: 885
    summary: "\nA variable wrapper to share data between nodes. It is a Scriptable Object.\nDon&apos;t forget to reset it when needed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class NodeVariableBase : ScriptableObject'
        VB: >-
          Public MustInherit Class NodeVariableBase

              Inherits ScriptableObject
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
- id: ESGI.BehaviourTrees.Example
  commentId: N:ESGI.BehaviourTrees.Example
  language: CSharp
  name:
    CSharp: ESGI.BehaviourTrees.Example
    VB: ESGI.BehaviourTrees.Example
  nameWithType:
    CSharp: ESGI.BehaviourTrees.Example
    VB: ESGI.BehaviourTrees.Example
  qualifiedName:
    CSharp: ESGI.BehaviourTrees.Example
    VB: ESGI.BehaviourTrees.Example
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ESGI.BehaviourTrees.Example.Enemy
    commentId: T:ESGI.BehaviourTrees.Example.Enemy
    language: CSharp
    name:
      CSharp: Enemy
      VB: Enemy
    nameWithType:
      CSharp: Enemy
      VB: Enemy
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.Enemy
      VB: ESGI.BehaviourTrees.Example.Enemy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: Enemy
      path: ''
      startLine: 203
    summary: "\nEmpty class to give the Enemy type to an object. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class Enemy : PGMonoBehaviour'
        VB: >-
          Public Class Enemy

              Inherits PGMonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.Enemy.Awake
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: Enemy.Awake()
        VB: Enemy.Awake()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.Awake()
        VB: ESGI.BehaviourTrees.Example.Enemy.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: Awake
        path: ''
        startLine: 212
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: ESGI.BehaviourTrees.Example.Enemy.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Example.Enemy.Start
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Enemy.Start()
        VB: Enemy.Start()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.Start()
        VB: ESGI.BehaviourTrees.Example.Enemy.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: Start
        path: ''
        startLine: 216
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: ESGI.BehaviourTrees.Example.Enemy.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Example.Enemy.Update
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Enemy.Update()
        VB: Enemy.Update()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.Update()
        VB: ESGI.BehaviourTrees.Example.Enemy.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: Update
        path: ''
        startLine: 220
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: ESGI.BehaviourTrees.Example.Enemy.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Example.Enemy.OnEnable
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: Enemy.OnEnable()
        VB: Enemy.OnEnable()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.OnEnable()
        VB: ESGI.BehaviourTrees.Example.Enemy.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnEnable
        path: ''
        startLine: 224
      syntax:
        content:
          CSharp: public void OnEnable()
          VB: Public Sub OnEnable
      overload: ESGI.BehaviourTrees.Example.Enemy.OnEnable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Example.Enemy.OnDisable
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: Enemy.OnDisable()
        VB: Enemy.OnDisable()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.OnDisable()
        VB: ESGI.BehaviourTrees.Example.Enemy.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnDisable
        path: ''
        startLine: 228
      syntax:
        content:
          CSharp: public void OnDisable()
          VB: Public Sub OnDisable
      overload: ESGI.BehaviourTrees.Example.Enemy.OnDisable*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: ESGI.BehaviourTrees.Example.Enemy.OnDestroy
      commentId: M:ESGI.BehaviourTrees.Example.Enemy.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: Enemy.OnDestroy()
        VB: Enemy.OnDestroy()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Enemy.OnDestroy()
        VB: ESGI.BehaviourTrees.Example.Enemy.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnDestroy
        path: ''
        startLine: 232
      syntax:
        content:
          CSharp: public void OnDestroy()
          VB: Public Sub OnDestroy
      overload: ESGI.BehaviourTrees.Example.Enemy.OnDestroy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: ESGI.BehaviourTrees.Example.Patroller
    commentId: T:ESGI.BehaviourTrees.Example.Patroller
    language: CSharp
    name:
      CSharp: Patroller
      VB: Patroller
    nameWithType:
      CSharp: Patroller
      VB: Patroller
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.Patroller
      VB: ESGI.BehaviourTrees.Example.Patroller
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: Patroller
      path: ''
      startLine: 252
    summary: "\nA character that patrols around waypoints, if an enemy is close : goes attacking it before\npatrolling.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Patroller : MonoBehaviour'
        VB: >-
          Public Class Patroller

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.Patroller.Speed
      commentId: P:ESGI.BehaviourTrees.Example.Patroller.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: Patroller.Speed
        VB: Patroller.Speed
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Patroller.Speed
        VB: ESGI.BehaviourTrees.Example.Patroller.Speed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: Speed
        path: ''
        startLine: 262
      summary: "\nThe speed of the Patroller\n"
      example: []
      syntax:
        content:
          CSharp: public float Speed { get; }
          VB: Public ReadOnly Property Speed As Single
        parameters: []
        return:
          type: System.Single
      overload: ESGI.BehaviourTrees.Example.Patroller.Speed*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.Example.Patroller.Waypoints
      commentId: P:ESGI.BehaviourTrees.Example.Patroller.Waypoints
      language: CSharp
      name:
        CSharp: Waypoints
        VB: Waypoints
      nameWithType:
        CSharp: Patroller.Waypoints
        VB: Patroller.Waypoints
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Patroller.Waypoints
        VB: ESGI.BehaviourTrees.Example.Patroller.Waypoints
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: Waypoints
        path: ''
        startLine: 266
      summary: "\nThe waypoints of the patroller\n"
      example: []
      syntax:
        content:
          CSharp: public Transform[] Waypoints { get; }
          VB: Public ReadOnly Property Waypoints As Transform()
        parameters: []
        return:
          type: Transform[]
      overload: ESGI.BehaviourTrees.Example.Patroller.Waypoints*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: ESGI.BehaviourTrees.Example.Patroller.AttackTransform
      commentId: P:ESGI.BehaviourTrees.Example.Patroller.AttackTransform
      language: CSharp
      name:
        CSharp: AttackTransform
        VB: AttackTransform
      nameWithType:
        CSharp: Patroller.AttackTransform
        VB: Patroller.AttackTransform
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.Patroller.AttackTransform
        VB: ESGI.BehaviourTrees.Example.Patroller.AttackTransform
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: AttackTransform
        path: ''
        startLine: 270
      summary: "\nThe transform that jumps when attacking an enemy\n"
      example: []
      syntax:
        content:
          CSharp: public Transform AttackTransform { get; }
          VB: Public ReadOnly Property AttackTransform As Transform
        parameters: []
        return:
          type: Transform
      overload: ESGI.BehaviourTrees.Example.Patroller.AttackTransform*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: ESGI.BehaviourTrees.Example.PatrollerBT
    commentId: T:ESGI.BehaviourTrees.Example.PatrollerBT
    language: CSharp
    name:
      CSharp: PatrollerBT
      VB: PatrollerBT
    nameWithType:
      CSharp: PatrollerBT
      VB: PatrollerBT
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.PatrollerBT
      VB: ESGI.BehaviourTrees.Example.PatrollerBT
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: PatrollerBT
      path: ''
      startLine: 278
    summary: "\nThe Behaviour Tree that controls a Patroller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PatrollerBT : BehaviourTree<Patroller>'
        VB: >-
          Public Class PatrollerBT

              Inherits BehaviourTree(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.BehaviourTreeBase
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Awake
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Start
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.OnDrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ESGI.BehaviourTrees.Example.PatrolSelectorNode
    commentId: T:ESGI.BehaviourTrees.Example.PatrolSelectorNode
    language: CSharp
    name:
      CSharp: PatrolSelectorNode
      VB: PatrolSelectorNode
    nameWithType:
      CSharp: PatrolSelectorNode
      VB: PatrolSelectorNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.PatrolSelectorNode
      VB: ESGI.BehaviourTrees.Example.PatrolSelectorNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: PatrolSelectorNode
      path: ''
      startLine: 291
    summary: "\nConcrete Selector Node for Patroller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PatrolSelectorNode : SelectorNode<Patroller>'
        VB: >-
          Public Class PatrolSelectorNode

              Inherits SelectorNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.CompositeNode{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ESGI.BehaviourTrees.Example.PatrolSequenceNode
    commentId: T:ESGI.BehaviourTrees.Example.PatrolSequenceNode
    language: CSharp
    name:
      CSharp: PatrolSequenceNode
      VB: PatrolSequenceNode
    nameWithType:
      CSharp: PatrolSequenceNode
      VB: PatrolSequenceNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.PatrolSequenceNode
      VB: ESGI.BehaviourTrees.Example.PatrolSequenceNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: PatrolSequenceNode
      path: ''
      startLine: 305
    summary: "\nConcrete Sequence Node for Patroller\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PatrolSequenceNode : SequenceNode<Patroller>'
        VB: >-
          Public Class PatrolSequenceNode

              Inherits SequenceNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.CompositeNode{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: ESGI.BehaviourTrees.Example.AttackEnemyNode
    commentId: T:ESGI.BehaviourTrees.Example.AttackEnemyNode
    language: CSharp
    name:
      CSharp: AttackEnemyNode
      VB: AttackEnemyNode
    nameWithType:
      CSharp: AttackEnemyNode
      VB: AttackEnemyNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.AttackEnemyNode
      VB: ESGI.BehaviourTrees.Example.AttackEnemyNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: AttackEnemyNode
      path: ''
      startLine: 323
    summary: "\nAction Node to attack en enemy\n"
    example: []
    syntax:
      content:
        CSharp: 'public class AttackEnemyNode : ActionNode<Patroller>'
        VB: >-
          Public Class AttackEnemyNode

              Inherits ActionNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.ActionNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit
      commentId: M:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit
      language: CSharp
      name:
        CSharp: OnInit()
        VB: OnInit()
      nameWithType:
        CSharp: AttackEnemyNode.OnInit()
        VB: AttackEnemyNode.OnInit()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit()
        VB: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnInit
        path: ''
        startLine: 331
      syntax:
        content:
          CSharp: protected override void OnInit()
          VB: Protected Overrides Sub OnInit
      overload: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute
      commentId: M:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute
      language: CSharp
      name:
        CSharp: OnBeforeExecute()
        VB: OnBeforeExecute()
      nameWithType:
        CSharp: AttackEnemyNode.OnBeforeExecute()
        VB: AttackEnemyNode.OnBeforeExecute()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute()
        VB: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnBeforeExecute
        path: ''
        startLine: 337
      syntax:
        content:
          CSharp: public override void OnBeforeExecute()
          VB: Public Overrides Sub OnBeforeExecute
      overload: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: AttackEnemyNode.OnUpdate()
        VB: AttackEnemyNode.OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate()
        VB: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnUpdate
        path: ''
        startLine: 343
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: ESGI.BehaviourTrees.Example.GoToTargetNode
    commentId: T:ESGI.BehaviourTrees.Example.GoToTargetNode
    language: CSharp
    name:
      CSharp: GoToTargetNode
      VB: GoToTargetNode
    nameWithType:
      CSharp: GoToTargetNode
      VB: GoToTargetNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.GoToTargetNode
      VB: ESGI.BehaviourTrees.Example.GoToTargetNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: GoToTargetNode
      path: ''
      startLine: 373
    summary: "\nMake the patroller move to the target transform\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GoToTargetNode : ActionNode<Patroller>'
        VB: >-
          Public Class GoToTargetNode

              Inherits ActionNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.ActionNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: GoToTargetNode.OnUpdate()
        VB: GoToTargetNode.OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate()
        VB: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnUpdate
        path: ''
        startLine: 378
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: ESGI.BehaviourTrees.Example.PatrolNode
    commentId: T:ESGI.BehaviourTrees.Example.PatrolNode
    language: CSharp
    name:
      CSharp: PatrolNode
      VB: PatrolNode
    nameWithType:
      CSharp: PatrolNode
      VB: PatrolNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.PatrolNode
      VB: ESGI.BehaviourTrees.Example.PatrolNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: PatrolNode
      path: ''
      startLine: 415
    summary: "\nThe player patrols around waypoints\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PatrolNode : ActionNode<Patroller>'
        VB: >-
          Public Class PatrolNode

              Inherits ActionNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.ActionNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute
      commentId: M:ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute
      language: CSharp
      name:
        CSharp: OnBeforeExecute()
        VB: OnBeforeExecute()
      nameWithType:
        CSharp: PatrolNode.OnBeforeExecute()
        VB: PatrolNode.OnBeforeExecute()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute()
        VB: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnBeforeExecute
        path: ''
        startLine: 431
      syntax:
        content:
          CSharp: public override void OnBeforeExecute()
          VB: Public Overrides Sub OnBeforeExecute
      overload: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: PatrolNode.OnUpdate()
        VB: PatrolNode.OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate()
        VB: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnUpdate
        path: ''
        startLine: 438
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
    commentId: T:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
    language: CSharp
    name:
      CSharp: CheckEnemyInFovRangeNode
      VB: CheckEnemyInFovRangeNode
    nameWithType:
      CSharp: CheckEnemyInFovRangeNode
      VB: CheckEnemyInFovRangeNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
      VB: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: CheckEnemyInFovRangeNode
      path: ''
      startLine: 485
    summary: "\nCheck if the target Transform is in range. If true, update the SharedData value.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CheckEnemyInFovRangeNode : ConditionNode<Patroller>'
        VB: >-
          Public Class CheckEnemyInFovRangeNode

              Inherits ConditionNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.ConditionNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute
      commentId: M:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute
      language: CSharp
      name:
        CSharp: OnBeforeExecute()
        VB: OnBeforeExecute()
      nameWithType:
        CSharp: CheckEnemyInFovRangeNode.OnBeforeExecute()
        VB: CheckEnemyInFovRangeNode.OnBeforeExecute()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute()
        VB: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnBeforeExecute
        path: ''
        startLine: 492
      syntax:
        content:
          CSharp: public override void OnBeforeExecute()
          VB: Public Overrides Sub OnBeforeExecute
      overload: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: CheckEnemyInFovRangeNode.OnUpdate()
        VB: CheckEnemyInFovRangeNode.OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate()
        VB: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnUpdate
        path: ''
        startLine: 498
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos
      commentId: M:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos
      language: CSharp
      name:
        CSharp: DrawGizmos()
        VB: DrawGizmos()
      nameWithType:
        CSharp: CheckEnemyInFovRangeNode.DrawGizmos()
        VB: CheckEnemyInFovRangeNode.DrawGizmos()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos()
        VB: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: DrawGizmos
        path: ''
        startLine: 516
      syntax:
        content:
          CSharp: public override void DrawGizmos()
          VB: Public Overrides Sub DrawGizmos
      overload: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
    commentId: T:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
    language: CSharp
    name:
      CSharp: EnemyInMeleeRangeNode
      VB: EnemyInMeleeRangeNode
    nameWithType:
      CSharp: EnemyInMeleeRangeNode
      VB: EnemyInMeleeRangeNode
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
      VB: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: EnemyInMeleeRangeNode
      path: ''
      startLine: 533
    summary: "\nCheck if the target Enemy is in range. If true, update the SharedEnemy value.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EnemyInMeleeRangeNode : ConditionNode<Patroller>'
        VB: >-
          Public Class EnemyInMeleeRangeNode

              Inherits ConditionNode(Of Patroller)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeBase
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    - ESGI.BehaviourTrees.ConditionNode{ESGI.BehaviourTrees.Example.Patroller}
    inheritedMembers:
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
    - ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute
      commentId: M:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute
      language: CSharp
      name:
        CSharp: OnBeforeExecute()
        VB: OnBeforeExecute()
      nameWithType:
        CSharp: EnemyInMeleeRangeNode.OnBeforeExecute()
        VB: EnemyInMeleeRangeNode.OnBeforeExecute()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute()
        VB: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnBeforeExecute
        path: ''
        startLine: 540
      syntax:
        content:
          CSharp: public override void OnBeforeExecute()
          VB: Public Overrides Sub OnBeforeExecute
      overload: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate
      commentId: M:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate
      language: CSharp
      name:
        CSharp: OnUpdate()
        VB: OnUpdate()
      nameWithType:
        CSharp: EnemyInMeleeRangeNode.OnUpdate()
        VB: EnemyInMeleeRangeNode.OnUpdate()
      qualifiedName:
        CSharp: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate()
        VB: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: ESGI.BehaviourTrees.Example
      source:
        id: OnUpdate
        path: ''
        startLine: 546
      syntax:
        content:
          CSharp: protected override NodeState OnUpdate()
          VB: Protected Overrides Function OnUpdate As NodeState
        return:
          type: ESGI.BehaviourTrees.NodeState
      overload: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate*
      overridden: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: ESGI.BehaviourTrees.Example.SharedEnemy
    commentId: T:ESGI.BehaviourTrees.Example.SharedEnemy
    language: CSharp
    name:
      CSharp: SharedEnemy
      VB: SharedEnemy
    nameWithType:
      CSharp: SharedEnemy
      VB: SharedEnemy
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Example.SharedEnemy
      VB: ESGI.BehaviourTrees.Example.SharedEnemy
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Example
    source:
      id: SharedEnemy
      path: ''
      startLine: 575
    summary: "\nAn Enemy that can be shared between nodes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SharedEnemy : NodeVariable<Enemy>'
        VB: >-
          Public Class SharedEnemy

              Inherits NodeVariable(Of Enemy)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeVariableBase
    - ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}
    inheritedMembers:
    - ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.Value
    - ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.ResetVariable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: ESGI.BehaviourTrees.Variables
  commentId: N:ESGI.BehaviourTrees.Variables
  language: CSharp
  name:
    CSharp: ESGI.BehaviourTrees.Variables
    VB: ESGI.BehaviourTrees.Variables
  nameWithType:
    CSharp: ESGI.BehaviourTrees.Variables
    VB: ESGI.BehaviourTrees.Variables
  qualifiedName:
    CSharp: ESGI.BehaviourTrees.Variables
    VB: ESGI.BehaviourTrees.Variables
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: ESGI.BehaviourTrees.Variables.SharedTransform
    commentId: T:ESGI.BehaviourTrees.Variables.SharedTransform
    language: CSharp
    name:
      CSharp: SharedTransform
      VB: SharedTransform
    nameWithType:
      CSharp: SharedTransform
      VB: SharedTransform
    qualifiedName:
      CSharp: ESGI.BehaviourTrees.Variables.SharedTransform
      VB: ESGI.BehaviourTrees.Variables.SharedTransform
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: ESGI.BehaviourTrees.Variables
    source:
      id: SharedTransform
      path: ''
      startLine: 898
    summary: "\nA transform that can be shared between nodes.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SharedTransform : NodeVariable<Transform>'
        VB: >-
          Public Class SharedTransform

              Inherits NodeVariable(Of Transform)
    inheritance:
    - System.Object
    - ESGI.BehaviourTrees.NodeVariableBase
    - ESGI.BehaviourTrees.NodeVariable{Transform}
    inheritedMembers:
    - ESGI.BehaviourTrees.NodeVariable{Transform}.Value
    - ESGI.BehaviourTrees.NodeVariable{Transform}.ResetVariable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
references:
  ESGI.BehaviourTrees:
    name:
      CSharp:
      - name: ESGI.BehaviourTrees
        nameWithType: ESGI.BehaviourTrees
        qualifiedName: ESGI.BehaviourTrees
      VB:
      - name: ESGI.BehaviourTrees
        nameWithType: ESGI.BehaviourTrees
        qualifiedName: ESGI.BehaviourTrees
    isDefinition: true
    commentId: N:ESGI.BehaviourTrees
  ESGI.BehaviourTrees.BehaviourTreeBase:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase
        name: BehaviourTreeBase
        nameWithType: BehaviourTreeBase
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase
        name: BehaviourTreeBase
        nameWithType: BehaviourTreeBase
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase
    isDefinition: true
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.BehaviourTreeBase
  TAgent:
    name:
      CSharp:
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      VB:
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
    isDefinition: true
  '{TAgent}':
    name:
      CSharp:
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      VB:
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
    isDefinition: false
    definition: TAgent
    commentId: '!:TAgent'
  ESGI.BehaviourTrees.BehaviourTree`1.Agent*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent*
        name: Agent
        nameWithType: BehaviourTree<TAgent>.Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Agent
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent*
        name: Agent
        nameWithType: BehaviourTree(Of TAgent).Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Agent
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTree`1.Agent
  ESGI.BehaviourTrees.BehaviourTreeBase.Awake:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
        name: Awake
        nameWithType: BehaviourTreeBase.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
        name: Awake
        nameWithType: BehaviourTreeBase.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ESGI.BehaviourTrees.BehaviourTreeBase
    commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Awake
  ESGI.BehaviourTrees.BehaviourTree`1.Awake*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake*
        name: Awake
        nameWithType: BehaviourTree<TAgent>.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Awake
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake*
        name: Awake
        nameWithType: BehaviourTree(Of TAgent).Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Awake
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTree`1.Awake
  ESGI.BehaviourTrees.BehaviourTreeBase.Start:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Start
        name: Start
        nameWithType: BehaviourTreeBase.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Start
        name: Start
        nameWithType: BehaviourTreeBase.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ESGI.BehaviourTrees.BehaviourTreeBase
    commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Start
  ESGI.BehaviourTrees.BehaviourTree`1.Start*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start*
        name: Start
        nameWithType: BehaviourTree<TAgent>.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Start
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start*
        name: Start
        nameWithType: BehaviourTree(Of TAgent).Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Start
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTree`1.Start
  ESGI.BehaviourTrees.BehaviourTreeBase.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Update
        name: Update
        nameWithType: BehaviourTreeBase.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Update
        name: Update
        nameWithType: BehaviourTreeBase.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ESGI.BehaviourTrees.BehaviourTreeBase
    commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.Update
  ESGI.BehaviourTrees.BehaviourTree`1.Update*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update*
        name: Update
        nameWithType: BehaviourTree<TAgent>.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Update
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update*
        name: Update
        nameWithType: BehaviourTree(Of TAgent).Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Update
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTree`1.Update
  ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTreeBase.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTreeBase.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ESGI.BehaviourTrees.BehaviourTreeBase
    commentId: M:ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
  ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos*
        name: OnDrawGizmos
        nameWithType: BehaviourTree<TAgent>.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.OnDrawGizmos
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos*
        name: OnDrawGizmos
        nameWithType: BehaviourTree(Of TAgent).OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).OnDrawGizmos
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
  ESGI.BehaviourTrees.BehaviourTree`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.BehaviourTree`1
  ESGI.BehaviourTrees.BehaviourTreeBase.Awake*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Awake*
        name: Awake
        nameWithType: BehaviourTreeBase.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Awake*
        name: Awake
        nameWithType: BehaviourTreeBase.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Awake
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTreeBase.Awake
  ESGI.BehaviourTrees.BehaviourTreeBase.Start*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Start*
        name: Start
        nameWithType: BehaviourTreeBase.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Start
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Start*
        name: Start
        nameWithType: BehaviourTreeBase.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Start
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTreeBase.Start
  ESGI.BehaviourTrees.BehaviourTreeBase.Update*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Update*
        name: Update
        nameWithType: BehaviourTreeBase.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Update
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.Update*
        name: Update
        nameWithType: BehaviourTreeBase.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.Update
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTreeBase.Update
  ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos*
        name: OnDrawGizmos
        nameWithType: BehaviourTreeBase.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos*
        name: OnDrawGizmos
        nameWithType: BehaviourTreeBase.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.BehaviourTreeBase.OnDrawGizmos
  ESGI.BehaviourTrees.NodeState:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeState
        name: NodeState
        nameWithType: NodeState
        qualifiedName: ESGI.BehaviourTrees.NodeState
      VB:
      - id: ESGI.BehaviourTrees.NodeState
        name: NodeState
        nameWithType: NodeState
        qualifiedName: ESGI.BehaviourTrees.NodeState
    isDefinition: true
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.NodeState
  ESGI.BehaviourTrees.Node`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.Node`1
  ESGI.BehaviourTrees.Node{{TAgent}}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.Node{`0}
  ESGI.BehaviourTrees.Node`1.Agent:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node<TAgent>.Agent
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Agent
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node(Of TAgent).Agent
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Agent
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.Node`1.Agent
  ESGI.BehaviourTrees.Node{{TAgent}}.Agent:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node<TAgent>.Agent
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Agent
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node(Of TAgent).Agent
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Agent
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Agent
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: P:ESGI.BehaviourTrees.Node{`0}.Agent
  ESGI.BehaviourTrees.Node`1.State:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node<TAgent>.State
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.State
      VB:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node(Of TAgent).State
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).State
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.Node`1.State
  ESGI.BehaviourTrees.Node{{TAgent}}.State:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node<TAgent>.State
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.State
      VB:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node(Of TAgent).State
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).State
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.State
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: P:ESGI.BehaviourTrees.Node{`0}.State
  ESGI.BehaviourTrees.Node`1.Children:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node<TAgent>.Children
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Children
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node(Of TAgent).Children
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Children
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.Node`1.Children
  ESGI.BehaviourTrees.Node{{TAgent}}.Children:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node<TAgent>.Children
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Children
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node(Of TAgent).Children
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Children
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Children
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: P:ESGI.BehaviourTrees.Node{`0}.Children
  ESGI.BehaviourTrees.Node`1.IsRunningLastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node<TAgent>.IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.IsRunningLastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node(Of TAgent).IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).IsRunningLastChild
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.Node`1.IsRunningLastChild
  ESGI.BehaviourTrees.Node{{TAgent}}.IsRunningLastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node<TAgent>.IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.IsRunningLastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node(Of TAgent).IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).IsRunningLastChild
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: P:ESGI.BehaviourTrees.Node{`0}.IsRunningLastChild
  ESGI.BehaviourTrees.Node`1.LastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node<TAgent>.LastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.LastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node(Of TAgent).LastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).LastChild
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.Node`1.LastChild
  ESGI.BehaviourTrees.Node{{TAgent}}.LastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node<TAgent>.LastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.LastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node(Of TAgent).LastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).LastChild
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.LastChild
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: P:ESGI.BehaviourTrees.Node{`0}.LastChild
  ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0}):
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node<TAgent>.Init
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node(Of TAgent).Init
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
  ESGI.BehaviourTrees.Node{{TAgent}}.Init(ESGI.BehaviourTrees.BehaviourTree{{TAgent}}):
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node<TAgent>.Init
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node(Of TAgent).Init
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
  ESGI.BehaviourTrees.Node`1.OnInit:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node<TAgent>.OnInit
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node(Of TAgent).OnInit
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.OnInit
  ESGI.BehaviourTrees.Node{{TAgent}}.OnInit:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node<TAgent>.OnInit
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node(Of TAgent).OnInit
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnInit
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.OnInit
  ESGI.BehaviourTrees.Node`1.OnBeforeExecute:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node<TAgent>.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node(Of TAgent).OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.OnBeforeExecute
  ESGI.BehaviourTrees.Node{{TAgent}}.OnBeforeExecute:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node<TAgent>.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node(Of TAgent).OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.OnBeforeExecute
  ESGI.BehaviourTrees.Node`1.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node<TAgent>.Update
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node(Of TAgent).Update
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.Update
  ESGI.BehaviourTrees.Node{{TAgent}}.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node<TAgent>.Update
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node(Of TAgent).Update
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Update
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.Update
  ESGI.BehaviourTrees.Node`1.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.OnUpdate
  ESGI.BehaviourTrees.Node{{TAgent}}.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnUpdate
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.OnUpdate
  ESGI.BehaviourTrees.Node`1.OnExecutionEnd:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node<TAgent>.OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node(Of TAgent).OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.OnExecutionEnd
  ESGI.BehaviourTrees.Node{{TAgent}}.OnExecutionEnd:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node<TAgent>.OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node(Of TAgent).OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.OnExecutionEnd
  ESGI.BehaviourTrees.Node`1.DrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node<TAgent>.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node(Of TAgent).DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.Node`1.DrawGizmos
  ESGI.BehaviourTrees.Node{{TAgent}}.DrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node<TAgent>.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node(Of TAgent).DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.DrawGizmos
    parent: ESGI.BehaviourTrees.Node{{TAgent}}
    commentId: M:ESGI.BehaviourTrees.Node{`0}.DrawGizmos
  ESGI.BehaviourTrees.NodeBase:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeBase
        name: NodeBase
        nameWithType: NodeBase
        qualifiedName: ESGI.BehaviourTrees.NodeBase
      VB:
      - id: ESGI.BehaviourTrees.NodeBase
        name: NodeBase
        nameWithType: NodeBase
        qualifiedName: ESGI.BehaviourTrees.NodeBase
    isDefinition: true
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.NodeBase
  ESGI.BehaviourTrees.ActionNode`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.ActionNode`1
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: ESGI.BehaviourTrees.ActionNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.ActionNode`1
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: ESGI.BehaviourTrees.ActionNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.ActionNode`1
  ESGI.BehaviourTrees.CompositeNode`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.CompositeNode`1
  ESGI.BehaviourTrees.ConditionNode`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.ConditionNode`1
        name: ConditionNode
        nameWithType: ConditionNode
        qualifiedName: ESGI.BehaviourTrees.ConditionNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.ConditionNode`1
        name: ConditionNode
        nameWithType: ConditionNode
        qualifiedName: ESGI.BehaviourTrees.ConditionNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.ConditionNode`1
  ESGI.BehaviourTrees.Node`1.Agent*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Agent*
        name: Agent
        nameWithType: Node<TAgent>.Agent
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Agent
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Agent*
        name: Agent
        nameWithType: Node(Of TAgent).Agent
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Agent
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.Agent
  ESGI.BehaviourTrees.Node`1.State*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.State*
        name: State
        nameWithType: Node<TAgent>.State
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.State
      VB:
      - id: ESGI.BehaviourTrees.Node`1.State*
        name: State
        nameWithType: Node(Of TAgent).State
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).State
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.State
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{ESGI.BehaviourTrees.Node`1}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{ESGI.BehaviourTrees.Node`1}
  ESGI.BehaviourTrees.Node`1.Children*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Children*
        name: Children
        nameWithType: Node<TAgent>.Children
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Children
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Children*
        name: Children
        nameWithType: Node(Of TAgent).Children
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Children
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.Children
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  ESGI.BehaviourTrees.Node`1.IsRunningLastChild*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild*
        name: IsRunningLastChild
        nameWithType: Node<TAgent>.IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.IsRunningLastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild*
        name: IsRunningLastChild
        nameWithType: Node(Of TAgent).IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).IsRunningLastChild
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.IsRunningLastChild
  ESGI.BehaviourTrees.Node`1.LastChild*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.LastChild*
        name: LastChild
        nameWithType: Node<TAgent>.LastChild
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.LastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.LastChild*
        name: LastChild
        nameWithType: Node(Of TAgent).LastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).LastChild
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.LastChild
  ESGI.BehaviourTrees.BehaviourTree{{TAgent}}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.BehaviourTree{`0}
  ESGI.BehaviourTrees.Node`1.Init*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Init*
        name: Init
        nameWithType: Node<TAgent>.Init
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Init
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Init*
        name: Init
        nameWithType: Node(Of TAgent).Init
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Init
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.Init
  ESGI.BehaviourTrees.Node`1.OnInit*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnInit*
        name: OnInit
        nameWithType: Node<TAgent>.OnInit
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnInit
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnInit*
        name: OnInit
        nameWithType: Node(Of TAgent).OnInit
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnInit
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.OnInit
  ESGI.BehaviourTrees.Node`1.OnBeforeExecute*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: Node<TAgent>.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnBeforeExecute
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: Node(Of TAgent).OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnBeforeExecute
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.OnBeforeExecute
  ESGI.BehaviourTrees.Node`1.Update*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Update*
        name: Update
        nameWithType: Node<TAgent>.Update
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.Update
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Update*
        name: Update
        nameWithType: Node(Of TAgent).Update
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).Update
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.Update
  ESGI.BehaviourTrees.Node`1.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate*
        name: OnUpdate
        nameWithType: Node<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate*
        name: OnUpdate
        nameWithType: Node(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.OnUpdate
  ESGI.BehaviourTrees.Node`1.OnExecutionEnd*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd*
        name: OnExecutionEnd
        nameWithType: Node<TAgent>.OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.OnExecutionEnd
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd*
        name: OnExecutionEnd
        nameWithType: Node(Of TAgent).OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).OnExecutionEnd
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.OnExecutionEnd
  ESGI.BehaviourTrees.Node`1.DrawGizmos*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos*
        name: DrawGizmos
        nameWithType: Node<TAgent>.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node<TAgent>.DrawGizmos
      VB:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos*
        name: DrawGizmos
        nameWithType: Node(Of TAgent).DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node(Of TAgent).DrawGizmos
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Node`1.DrawGizmos
  ESGI.BehaviourTrees.CompositeNode{{TAgent}}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.CompositeNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.CompositeNode{`0}
  ESGI.BehaviourTrees.SelectorNode`1.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate*
        name: OnUpdate
        nameWithType: SelectorNode<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode<TAgent>.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate*
        name: OnUpdate
        nameWithType: SelectorNode(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode(Of TAgent).OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
  ESGI.BehaviourTrees.SelectorNode`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SelectorNode`1
        name: SelectorNode
        nameWithType: SelectorNode
        qualifiedName: ESGI.BehaviourTrees.SelectorNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.SelectorNode`1
        name: SelectorNode
        nameWithType: SelectorNode
        qualifiedName: ESGI.BehaviourTrees.SelectorNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.SelectorNode`1
  ESGI.BehaviourTrees.SequenceNode`1.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate*
        name: OnUpdate
        nameWithType: SequenceNode<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode<TAgent>.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate*
        name: OnUpdate
        nameWithType: SequenceNode(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode(Of TAgent).OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
  ESGI.BehaviourTrees.SequenceNode`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SequenceNode`1
        name: SequenceNode
        nameWithType: SequenceNode
        qualifiedName: ESGI.BehaviourTrees.SequenceNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.SequenceNode`1
        name: SequenceNode
        nameWithType: SequenceNode
        qualifiedName: ESGI.BehaviourTrees.SequenceNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TAgent
        nameWithType: TAgent
        qualifiedName: TAgent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.SequenceNode`1
  ESGI.BehaviourTrees.NodeVariableBase:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariableBase
        name: NodeVariableBase
        nameWithType: NodeVariableBase
        qualifiedName: ESGI.BehaviourTrees.NodeVariableBase
      VB:
      - id: ESGI.BehaviourTrees.NodeVariableBase
        name: NodeVariableBase
        nameWithType: NodeVariableBase
        qualifiedName: ESGI.BehaviourTrees.NodeVariableBase
    isDefinition: true
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.NodeVariableBase
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  ESGI.BehaviourTrees.NodeVariable`1.Value*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value*
        name: Value
        nameWithType: NodeVariable<T>.Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<T>.Value
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value*
        name: Value
        nameWithType: NodeVariable(Of T).Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of T).Value
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.NodeVariable`1.Value
  ESGI.BehaviourTrees.NodeVariable`1.ResetVariable*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable*
        name: ResetVariable
        nameWithType: NodeVariable<T>.ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<T>.ResetVariable
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable*
        name: ResetVariable
        nameWithType: NodeVariable(Of T).ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of T).ResetVariable
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
  ESGI.BehaviourTrees.NodeVariable`1:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.NodeVariable`1
  ESGI.BehaviourTrees.Example.Enemy.Awake*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.Awake*
        name: Awake
        nameWithType: Enemy.Awake
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Awake
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.Awake*
        name: Awake
        nameWithType: Enemy.Awake
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Awake
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.Awake
  ESGI.BehaviourTrees.Example.Enemy.Start*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.Start*
        name: Start
        nameWithType: Enemy.Start
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Start
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.Start*
        name: Start
        nameWithType: Enemy.Start
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Start
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.Start
  ESGI.BehaviourTrees.Example.Enemy.Update*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.Update*
        name: Update
        nameWithType: Enemy.Update
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Update
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.Update*
        name: Update
        nameWithType: Enemy.Update
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.Update
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.Update
  ESGI.BehaviourTrees.Example.Enemy.OnEnable*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnEnable*
        name: OnEnable
        nameWithType: Enemy.OnEnable
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnEnable
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnEnable*
        name: OnEnable
        nameWithType: Enemy.OnEnable
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnEnable
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.OnEnable
  ESGI.BehaviourTrees.Example.Enemy.OnDisable*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnDisable*
        name: OnDisable
        nameWithType: Enemy.OnDisable
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnDisable
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnDisable*
        name: OnDisable
        nameWithType: Enemy.OnDisable
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnDisable
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.OnDisable
  ESGI.BehaviourTrees.Example.Enemy.OnDestroy*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnDestroy*
        name: OnDestroy
        nameWithType: Enemy.OnDestroy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnDestroy
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy.OnDestroy*
        name: OnDestroy
        nameWithType: Enemy.OnDestroy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy.OnDestroy
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Enemy.OnDestroy
  ESGI.BehaviourTrees.Example.Enemy:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy
      VB:
      - id: ESGI.BehaviourTrees.Example.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.Enemy
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  ESGI.BehaviourTrees.Example.Patroller.Speed*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Patroller.Speed*
        name: Speed
        nameWithType: Patroller.Speed
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.Speed
      VB:
      - id: ESGI.BehaviourTrees.Example.Patroller.Speed*
        name: Speed
        nameWithType: Patroller.Speed
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.Speed
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Patroller.Speed
  Transform[]:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  ESGI.BehaviourTrees.Example.Patroller.Waypoints*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Patroller.Waypoints*
        name: Waypoints
        nameWithType: Patroller.Waypoints
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.Waypoints
      VB:
      - id: ESGI.BehaviourTrees.Example.Patroller.Waypoints*
        name: Waypoints
        nameWithType: Patroller.Waypoints
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.Waypoints
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Patroller.Waypoints
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Transform'
  ESGI.BehaviourTrees.Example.Patroller.AttackTransform*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Patroller.AttackTransform*
        name: AttackTransform
        nameWithType: Patroller.AttackTransform
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.AttackTransform
      VB:
      - id: ESGI.BehaviourTrees.Example.Patroller.AttackTransform*
        name: AttackTransform
        nameWithType: Patroller.AttackTransform
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller.AttackTransform
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.Patroller.AttackTransform
  ESGI.BehaviourTrees.Example.Patroller:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      VB:
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.Patroller
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.BehaviourTree`1.Agent:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent
        name: Agent
        nameWithType: BehaviourTree<TAgent>.Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Agent
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent
        name: Agent
        nameWithType: BehaviourTree(Of TAgent).Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Agent
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.BehaviourTree`1.Agent
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Agent:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent
        name: Agent
        nameWithType: BehaviourTree<Patroller>.Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<ESGI.BehaviourTrees.Example.Patroller>.Agent
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Agent
        name: Agent
        nameWithType: BehaviourTree(Of Patroller).Agent
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of ESGI.BehaviourTrees.Example.Patroller).Agent
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1.Agent
    parent: ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Agent
  ESGI.BehaviourTrees.BehaviourTree`1.Awake:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake
        name: Awake
        nameWithType: BehaviourTree<TAgent>.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake
        name: Awake
        nameWithType: BehaviourTree(Of TAgent).Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Awake
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Awake:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake
        name: Awake
        nameWithType: BehaviourTree<Patroller>.Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<ESGI.BehaviourTrees.Example.Patroller>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Awake
        name: Awake
        nameWithType: BehaviourTree(Of Patroller).Awake
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of ESGI.BehaviourTrees.Example.Patroller).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1.Awake
    parent: ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Awake
  ESGI.BehaviourTrees.BehaviourTree`1.Start:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start
        name: Start
        nameWithType: BehaviourTree<TAgent>.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start
        name: Start
        nameWithType: BehaviourTree(Of TAgent).Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Start
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Start:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start
        name: Start
        nameWithType: BehaviourTree<Patroller>.Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<ESGI.BehaviourTrees.Example.Patroller>.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Start
        name: Start
        nameWithType: BehaviourTree(Of Patroller).Start
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of ESGI.BehaviourTrees.Example.Patroller).Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1.Start
    parent: ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Start
  ESGI.BehaviourTrees.BehaviourTree`1.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update
        name: Update
        nameWithType: BehaviourTree<TAgent>.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update
        name: Update
        nameWithType: BehaviourTree(Of TAgent).Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.Update
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update
        name: Update
        nameWithType: BehaviourTree<Patroller>.Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<ESGI.BehaviourTrees.Example.Patroller>.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.Update
        name: Update
        nameWithType: BehaviourTree(Of Patroller).Update
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of ESGI.BehaviourTrees.Example.Patroller).Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1.Update
    parent: ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.Update
  ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTree<TAgent>.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<TAgent>.OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTree(Of TAgent).OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of TAgent).OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
  ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.OnDrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTree<Patroller>.OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree<ESGI.BehaviourTrees.Example.Patroller>.OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
        name: OnDrawGizmos
        nameWithType: BehaviourTree(Of Patroller).OnDrawGizmos
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree(Of ESGI.BehaviourTrees.Example.Patroller).OnDrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.BehaviourTree`1.OnDrawGizmos
    parent: ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller}.OnDrawGizmos
  ESGI.BehaviourTrees.Example.PatrollerBT:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrollerBT
        name: PatrollerBT
        nameWithType: PatrollerBT
        qualifiedName: ESGI.BehaviourTrees.Example.PatrollerBT
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrollerBT
        name: PatrollerBT
        nameWithType: PatrollerBT
        qualifiedName: ESGI.BehaviourTrees.Example.PatrollerBT
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.PatrollerBT
  ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SelectorNode`1
        name: SelectorNode
        nameWithType: SelectorNode
        qualifiedName: ESGI.BehaviourTrees.SelectorNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.SelectorNode`1
        name: SelectorNode
        nameWithType: SelectorNode
        qualifiedName: ESGI.BehaviourTrees.SelectorNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.SelectorNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.SelectorNode`1.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SelectorNode<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode<TAgent>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SelectorNode(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode(Of TAgent).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
  ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SelectorNode<Patroller>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode<ESGI.BehaviourTrees.Example.Patroller>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SelectorNode(Of Patroller).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SelectorNode(Of ESGI.BehaviourTrees.Example.Patroller).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.SelectorNode`1.OnUpdate
    parent: ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.SelectorNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
  ESGI.BehaviourTrees.CompositeNode{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.CompositeNode`1
        name: CompositeNode
        nameWithType: CompositeNode
        qualifiedName: ESGI.BehaviourTrees.CompositeNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.CompositeNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.CompositeNode{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.Node`1
        name: Node
        nameWithType: Node
        qualifiedName: ESGI.BehaviourTrees.Node
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node<Patroller>.Agent
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.Agent
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Agent
        name: Agent
        nameWithType: Node(Of Patroller).Agent
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).Agent
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Agent
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Agent
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node<Patroller>.State
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.State
      VB:
      - id: ESGI.BehaviourTrees.Node`1.State
        name: State
        nameWithType: Node(Of Patroller).State
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).State
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.State
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.State
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node<Patroller>.Children
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.Children
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Children
        name: Children
        nameWithType: Node(Of Patroller).Children
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).Children
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Children
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Children
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node<Patroller>.IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.IsRunningLastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
        name: IsRunningLastChild
        nameWithType: Node(Of Patroller).IsRunningLastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).IsRunningLastChild
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.IsRunningLastChild
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.IsRunningLastChild
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node<Patroller>.LastChild
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.LastChild
      VB:
      - id: ESGI.BehaviourTrees.Node`1.LastChild
        name: LastChild
        nameWithType: Node(Of Patroller).LastChild
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).LastChild
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.LastChild
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: P:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.LastChild
  ? ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
  : name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node<Patroller>.Init
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
        name: Init
        nameWithType: Node(Of Patroller).Init
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).Init
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: ESGI.BehaviourTrees.BehaviourTree`1
        name: BehaviourTree
        nameWithType: BehaviourTree
        qualifiedName: ESGI.BehaviourTrees.BehaviourTree
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Init(ESGI.BehaviourTrees.BehaviourTree{`0})
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Init(ESGI.BehaviourTrees.BehaviourTree{ESGI.BehaviourTrees.Example.Patroller})
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node<Patroller>.OnInit
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnInit
        name: OnInit
        nameWithType: Node(Of Patroller).OnInit
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).OnInit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnInit
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnInit
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node<Patroller>.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
        name: OnBeforeExecute
        nameWithType: Node(Of Patroller).OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).OnBeforeExecute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnBeforeExecute
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnBeforeExecute
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node<Patroller>.Update
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.Update
        name: Update
        nameWithType: Node(Of Patroller).Update
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.Update
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.Update
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node<Patroller>.OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
        name: OnExecutionEnd
        nameWithType: Node(Of Patroller).OnExecutionEnd
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).OnExecutionEnd
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnExecutionEnd
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnExecutionEnd
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node<Patroller>.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.DrawGizmos
        name: DrawGizmos
        nameWithType: Node(Of Patroller).DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).DrawGizmos
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.DrawGizmos
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.DrawGizmos
  ESGI.BehaviourTrees.Example.PatrolSelectorNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrolSelectorNode
        name: PatrolSelectorNode
        nameWithType: PatrolSelectorNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolSelectorNode
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrolSelectorNode
        name: PatrolSelectorNode
        nameWithType: PatrolSelectorNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolSelectorNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.PatrolSelectorNode
  ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SequenceNode`1
        name: SequenceNode
        nameWithType: SequenceNode
        qualifiedName: ESGI.BehaviourTrees.SequenceNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.SequenceNode`1
        name: SequenceNode
        nameWithType: SequenceNode
        qualifiedName: ESGI.BehaviourTrees.SequenceNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.SequenceNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.SequenceNode`1.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SequenceNode<TAgent>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode<TAgent>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SequenceNode(Of TAgent).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode(Of TAgent).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
  ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SequenceNode<Patroller>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode<ESGI.BehaviourTrees.Example.Patroller>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
        name: OnUpdate
        nameWithType: SequenceNode(Of Patroller).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.SequenceNode(Of ESGI.BehaviourTrees.Example.Patroller).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.SequenceNode`1.OnUpdate
    parent: ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.SequenceNode{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
  ESGI.BehaviourTrees.Example.PatrolSequenceNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrolSequenceNode
        name: PatrolSequenceNode
        nameWithType: PatrolSequenceNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolSequenceNode
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrolSequenceNode
        name: PatrolSequenceNode
        nameWithType: PatrolSequenceNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolSequenceNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.PatrolSequenceNode
  ESGI.BehaviourTrees.ActionNode{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.ActionNode`1
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: ESGI.BehaviourTrees.ActionNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.ActionNode`1
        name: ActionNode
        nameWithType: ActionNode
        qualifiedName: ESGI.BehaviourTrees.ActionNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.ActionNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.ActionNode{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit*
        name: OnInit
        nameWithType: AttackEnemyNode.OnInit
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit
      VB:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit*
        name: OnInit
        nameWithType: AttackEnemyNode.OnInit
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnInit
  ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: AttackEnemyNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute
      VB:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: AttackEnemyNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnBeforeExecute
  ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node<Patroller>.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node<ESGI.BehaviourTrees.Example.Patroller>.OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.Node`1.OnUpdate
        name: OnUpdate
        nameWithType: Node(Of Patroller).OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Node(Of ESGI.BehaviourTrees.Example.Patroller).OnUpdate
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.Node`1.OnUpdate
    parent: ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}
    commentId: M:ESGI.BehaviourTrees.Node{ESGI.BehaviourTrees.Example.Patroller}.OnUpdate
  ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate*
        name: OnUpdate
        nameWithType: AttackEnemyNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate*
        name: OnUpdate
        nameWithType: AttackEnemyNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.AttackEnemyNode.OnUpdate
  ESGI.BehaviourTrees.Example.AttackEnemyNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode
        name: AttackEnemyNode
        nameWithType: AttackEnemyNode
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode
      VB:
      - id: ESGI.BehaviourTrees.Example.AttackEnemyNode
        name: AttackEnemyNode
        nameWithType: AttackEnemyNode
        qualifiedName: ESGI.BehaviourTrees.Example.AttackEnemyNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.AttackEnemyNode
  ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate*
        name: OnUpdate
        nameWithType: GoToTargetNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate*
        name: OnUpdate
        nameWithType: GoToTargetNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.GoToTargetNode.OnUpdate
  ESGI.BehaviourTrees.Example.GoToTargetNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.GoToTargetNode
        name: GoToTargetNode
        nameWithType: GoToTargetNode
        qualifiedName: ESGI.BehaviourTrees.Example.GoToTargetNode
      VB:
      - id: ESGI.BehaviourTrees.Example.GoToTargetNode
        name: GoToTargetNode
        nameWithType: GoToTargetNode
        qualifiedName: ESGI.BehaviourTrees.Example.GoToTargetNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.GoToTargetNode
  ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: PatrolNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: PatrolNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.PatrolNode.OnBeforeExecute
  ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate*
        name: OnUpdate
        nameWithType: PatrolNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate*
        name: OnUpdate
        nameWithType: PatrolNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.PatrolNode.OnUpdate
  ESGI.BehaviourTrees.Example.PatrolNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.PatrolNode
        name: PatrolNode
        nameWithType: PatrolNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode
      VB:
      - id: ESGI.BehaviourTrees.Example.PatrolNode
        name: PatrolNode
        nameWithType: PatrolNode
        qualifiedName: ESGI.BehaviourTrees.Example.PatrolNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.PatrolNode
  ESGI.BehaviourTrees.ConditionNode{ESGI.BehaviourTrees.Example.Patroller}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.ConditionNode`1
        name: ConditionNode
        nameWithType: ConditionNode
        qualifiedName: ESGI.BehaviourTrees.ConditionNode
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.ConditionNode`1
        name: ConditionNode
        nameWithType: ConditionNode
        qualifiedName: ESGI.BehaviourTrees.ConditionNode
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Patroller
        name: Patroller
        nameWithType: Patroller
        qualifiedName: ESGI.BehaviourTrees.Example.Patroller
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.ConditionNode`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.ConditionNode{ESGI.BehaviourTrees.Example.Patroller}
  ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: CheckEnemyInFovRangeNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute
      VB:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: CheckEnemyInFovRangeNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnBeforeExecute
  ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate*
        name: OnUpdate
        nameWithType: CheckEnemyInFovRangeNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate*
        name: OnUpdate
        nameWithType: CheckEnemyInFovRangeNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.OnUpdate
  ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos*
        name: DrawGizmos
        nameWithType: CheckEnemyInFovRangeNode.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos
      VB:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos*
        name: DrawGizmos
        nameWithType: CheckEnemyInFovRangeNode.DrawGizmos
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode.DrawGizmos
  ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
        name: CheckEnemyInFovRangeNode
        nameWithType: CheckEnemyInFovRangeNode
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
      VB:
      - id: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
        name: CheckEnemyInFovRangeNode
        nameWithType: CheckEnemyInFovRangeNode
        qualifiedName: ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.CheckEnemyInFovRangeNode
  ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: EnemyInMeleeRangeNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute
      VB:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute*
        name: OnBeforeExecute
        nameWithType: EnemyInMeleeRangeNode.OnBeforeExecute
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnBeforeExecute
  ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate*:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate*
        name: OnUpdate
        nameWithType: EnemyInMeleeRangeNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate
      VB:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate*
        name: OnUpdate
        nameWithType: EnemyInMeleeRangeNode.OnUpdate
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate
    isDefinition: true
    commentId: Overload:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode.OnUpdate
  ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
        name: EnemyInMeleeRangeNode
        nameWithType: EnemyInMeleeRangeNode
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
      VB:
      - id: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
        name: EnemyInMeleeRangeNode
        nameWithType: EnemyInMeleeRangeNode
        qualifiedName: ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.EnemyInMeleeRangeNode
  ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: ESGI.BehaviourTrees.Example.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: ESGI.BehaviourTrees.Example.Enemy
        name: Enemy
        nameWithType: Enemy
        qualifiedName: ESGI.BehaviourTrees.Example.Enemy
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}
  ESGI.BehaviourTrees.NodeVariable`1.Value:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable<T>.Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<T>.Value
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable(Of T).Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of T).Value
    isDefinition: true
    commentId: P:ESGI.BehaviourTrees.NodeVariable`1.Value
  ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.Value:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable<Enemy>.Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<ESGI.BehaviourTrees.Example.Enemy>.Value
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable(Of Enemy).Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of ESGI.BehaviourTrees.Example.Enemy).Value
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1.Value
    parent: ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}
    commentId: P:ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.Value
  ESGI.BehaviourTrees.NodeVariable`1.ResetVariable:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable<T>.ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<T>.ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable(Of T).ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of T).ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
  ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.ResetVariable:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable<Enemy>.ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<ESGI.BehaviourTrees.Example.Enemy>.ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable(Of Enemy).ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of ESGI.BehaviourTrees.Example.Enemy).ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
    parent: ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}
    commentId: M:ESGI.BehaviourTrees.NodeVariable{ESGI.BehaviourTrees.Example.Enemy}.ResetVariable
  ESGI.BehaviourTrees.Example.SharedEnemy:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Example.SharedEnemy
        name: SharedEnemy
        nameWithType: SharedEnemy
        qualifiedName: ESGI.BehaviourTrees.Example.SharedEnemy
      VB:
      - id: ESGI.BehaviourTrees.Example.SharedEnemy
        name: SharedEnemy
        nameWithType: SharedEnemy
        qualifiedName: ESGI.BehaviourTrees.Example.SharedEnemy
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Example.SharedEnemy
  ESGI.BehaviourTrees.Example:
    name:
      CSharp:
      - name: ESGI.BehaviourTrees.Example
        nameWithType: ESGI.BehaviourTrees.Example
        qualifiedName: ESGI.BehaviourTrees.Example
      VB:
      - name: ESGI.BehaviourTrees.Example
        nameWithType: ESGI.BehaviourTrees.Example
        qualifiedName: ESGI.BehaviourTrees.Example
    isDefinition: true
    commentId: N:ESGI.BehaviourTrees.Example
  ESGI.BehaviourTrees.NodeVariable{Transform}:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1
        name: NodeVariable
        nameWithType: NodeVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1
    parent: ESGI.BehaviourTrees
    commentId: T:ESGI.BehaviourTrees.NodeVariable{Transform}
  ESGI.BehaviourTrees.NodeVariable{Transform}.Value:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable<Transform>.Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<Transform>.Value
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.Value
        name: Value
        nameWithType: NodeVariable(Of Transform).Value
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of Transform).Value
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1.Value
    parent: ESGI.BehaviourTrees.NodeVariable{Transform}
    commentId: P:ESGI.BehaviourTrees.NodeVariable{Transform}.Value
  ESGI.BehaviourTrees.NodeVariable{Transform}.ResetVariable:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable<Transform>.ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable<Transform>.ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
        name: ResetVariable
        nameWithType: NodeVariable(Of Transform).ResetVariable
        qualifiedName: ESGI.BehaviourTrees.NodeVariable(Of Transform).ResetVariable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: ESGI.BehaviourTrees.NodeVariable`1.ResetVariable
    parent: ESGI.BehaviourTrees.NodeVariable{Transform}
    commentId: M:ESGI.BehaviourTrees.NodeVariable{Transform}.ResetVariable
  ESGI.BehaviourTrees.Variables.SharedTransform:
    name:
      CSharp:
      - id: ESGI.BehaviourTrees.Variables.SharedTransform
        name: SharedTransform
        nameWithType: SharedTransform
        qualifiedName: ESGI.BehaviourTrees.Variables.SharedTransform
      VB:
      - id: ESGI.BehaviourTrees.Variables.SharedTransform
        name: SharedTransform
        nameWithType: SharedTransform
        qualifiedName: ESGI.BehaviourTrees.Variables.SharedTransform
    isDefinition: true
    commentId: T:ESGI.BehaviourTrees.Variables.SharedTransform
  ESGI.BehaviourTrees.Variables:
    name:
      CSharp:
      - name: ESGI.BehaviourTrees.Variables
        nameWithType: ESGI.BehaviourTrees.Variables
        qualifiedName: ESGI.BehaviourTrees.Variables
      VB:
      - name: ESGI.BehaviourTrees.Variables
        nameWithType: ESGI.BehaviourTrees.Variables
        qualifiedName: ESGI.BehaviourTrees.Variables
    isDefinition: true
    commentId: N:ESGI.BehaviourTrees.Variables
